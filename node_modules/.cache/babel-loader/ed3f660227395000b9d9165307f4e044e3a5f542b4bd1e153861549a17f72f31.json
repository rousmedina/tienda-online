{"ast":null,"code":"import { supabase } from '../config/supabase';\n\n// Obtener todos los productos\nexport const getAllProducts = async (filters = {}) => {\n  try {\n    let query = supabase.from('products').select('*').eq('is_active', true);\n\n    // Filtro por categoría\n    if (filters.category && filters.category !== 'todos') {\n      query = query.eq('category', filters.category);\n    }\n\n    // Filtro por rango de precio\n    if (filters.minPrice !== undefined) {\n      query = query.gte('price', filters.minPrice);\n    }\n    if (filters.maxPrice !== undefined) {\n      query = query.lte('price', filters.maxPrice);\n    }\n\n    // Búsqueda por texto\n    if (filters.search) {\n      query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%`);\n    }\n\n    // Ordenamiento\n    if (filters.sortBy) {\n      switch (filters.sortBy) {\n        case 'precio-asc':\n          query = query.order('price', {\n            ascending: true\n          });\n          break;\n        case 'precio-desc':\n          query = query.order('price', {\n            ascending: false\n          });\n          break;\n        case 'nombre':\n          query = query.order('name', {\n            ascending: true\n          });\n          break;\n        case 'rating':\n          query = query.order('rating', {\n            ascending: false\n          });\n          break;\n        case 'ventas':\n          query = query.order('sales', {\n            ascending: false\n          });\n          break;\n        default:\n          query = query.order('created_at', {\n            ascending: false\n          });\n      }\n    } else {\n      query = query.order('created_at', {\n        ascending: false\n      });\n    }\n    const {\n      data,\n      error\n    } = await query;\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Obtener un producto por ID\nexport const getProductById = async id => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('products').select('*').eq('id', id).single();\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Obtener productos por categoría\nexport const getProductsByCategory = async category => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('products').select('*').eq('category', category).eq('is_active', true).order('created_at', {\n      ascending: false\n    });\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Buscar productos\nexport const searchProducts = async searchTerm => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('products').select('*').or(`name.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%,category.ilike.%${searchTerm}%`).eq('is_active', true).limit(10);\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Obtener productos destacados\nexport const getFeaturedProducts = async (limit = 4) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('products').select('*').eq('is_active', true).order('rating', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Obtener productos más vendidos\nexport const getBestSellers = async (limit = 4) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('products').select('*').eq('is_active', true).order('sales', {\n      ascending: false\n    }).limit(limit);\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Actualizar stock de producto\nexport const updateProductStock = async (productId, quantity) => {\n  try {\n    const {\n      data: product\n    } = await getProductById(productId);\n    if (!product) throw new Error('Producto no encontrado');\n    const newStock = product.stock - quantity;\n    if (newStock < 0) throw new Error('Stock insuficiente');\n    const {\n      data,\n      error\n    } = await supabase.from('products').update({\n      stock: newStock\n    }).eq('id', productId).select().single();\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Incrementar contador de ventas\nexport const incrementProductSales = async (productId, quantity = 1) => {\n  try {\n    const {\n      data: product\n    } = await getProductById(productId);\n    if (!product) throw new Error('Producto no encontrado');\n    const {\n      data,\n      error\n    } = await supabase.from('products').update({\n      sales: product.sales + quantity\n    }).eq('id', productId).select().single();\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["supabase","getAllProducts","filters","query","from","select","eq","category","minPrice","undefined","gte","maxPrice","lte","search","or","sortBy","order","ascending","data","error","message","getProductById","id","single","getProductsByCategory","searchProducts","searchTerm","limit","getFeaturedProducts","getBestSellers","updateProductStock","productId","quantity","product","Error","newStock","stock","update","incrementProductSales","sales"],"sources":["C:/Users/Usuario/OneDrive/Desktop/proyecto/chinasaqra-demo/src/services/productService.js"],"sourcesContent":["import { supabase } from '../config/supabase';\n\n// Obtener todos los productos\nexport const getAllProducts = async (filters = {}) => {\n  try {\n    let query = supabase\n      .from('products')\n      .select('*')\n      .eq('is_active', true);\n\n    // Filtro por categoría\n    if (filters.category && filters.category !== 'todos') {\n      query = query.eq('category', filters.category);\n    }\n\n    // Filtro por rango de precio\n    if (filters.minPrice !== undefined) {\n      query = query.gte('price', filters.minPrice);\n    }\n    if (filters.maxPrice !== undefined) {\n      query = query.lte('price', filters.maxPrice);\n    }\n\n    // Búsqueda por texto\n    if (filters.search) {\n      query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%`);\n    }\n\n    // Ordenamiento\n    if (filters.sortBy) {\n      switch (filters.sortBy) {\n        case 'precio-asc':\n          query = query.order('price', { ascending: true });\n          break;\n        case 'precio-desc':\n          query = query.order('price', { ascending: false });\n          break;\n        case 'nombre':\n          query = query.order('name', { ascending: true });\n          break;\n        case 'rating':\n          query = query.order('rating', { ascending: false });\n          break;\n        case 'ventas':\n          query = query.order('sales', { ascending: false });\n          break;\n        default:\n          query = query.order('created_at', { ascending: false });\n      }\n    } else {\n      query = query.order('created_at', { ascending: false });\n    }\n\n    const { data, error } = await query;\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Obtener un producto por ID\nexport const getProductById = async (id) => {\n  try {\n    const { data, error } = await supabase\n      .from('products')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Obtener productos por categoría\nexport const getProductsByCategory = async (category) => {\n  try {\n    const { data, error } = await supabase\n      .from('products')\n      .select('*')\n      .eq('category', category)\n      .eq('is_active', true)\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Buscar productos\nexport const searchProducts = async (searchTerm) => {\n  try {\n    const { data, error } = await supabase\n      .from('products')\n      .select('*')\n      .or(`name.ilike.%${searchTerm}%,description.ilike.%${searchTerm}%,category.ilike.%${searchTerm}%`)\n      .eq('is_active', true)\n      .limit(10);\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Obtener productos destacados\nexport const getFeaturedProducts = async (limit = 4) => {\n  try {\n    const { data, error } = await supabase\n      .from('products')\n      .select('*')\n      .eq('is_active', true)\n      .order('rating', { ascending: false })\n      .limit(limit);\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Obtener productos más vendidos\nexport const getBestSellers = async (limit = 4) => {\n  try {\n    const { data, error } = await supabase\n      .from('products')\n      .select('*')\n      .eq('is_active', true)\n      .order('sales', { ascending: false })\n      .limit(limit);\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Actualizar stock de producto\nexport const updateProductStock = async (productId, quantity) => {\n  try {\n    const { data: product } = await getProductById(productId);\n    if (!product) throw new Error('Producto no encontrado');\n\n    const newStock = product.stock - quantity;\n    if (newStock < 0) throw new Error('Stock insuficiente');\n\n    const { data, error } = await supabase\n      .from('products')\n      .update({ stock: newStock })\n      .eq('id', productId)\n      .select()\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Incrementar contador de ventas\nexport const incrementProductSales = async (productId, quantity = 1) => {\n  try {\n    const { data: product } = await getProductById(productId);\n    if (!product) throw new Error('Producto no encontrado');\n\n    const { data, error } = await supabase\n      .from('products')\n      .update({ sales: product.sales + quantity })\n      .eq('id', productId)\n      .select()\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}