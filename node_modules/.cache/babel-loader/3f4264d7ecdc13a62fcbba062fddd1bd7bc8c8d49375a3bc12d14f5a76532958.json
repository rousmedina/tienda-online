{"ast":null,"code":"import{supabase}from'../config/supabase';// Registrar nuevo usuario\nexport const signUp=async(email,password,fullName)=>{try{const{data,error}=await supabase.auth.signUp({email,password,options:{data:{full_name:fullName}}});if(error)throw error;// Crear perfil de usuario\nif(data.user){await supabase.from('profiles').insert([{id:data.user.id,email:data.user.email,full_name:fullName}]);}return{data,error:null};}catch(error){return{data:null,error:error.message};}};// Iniciar sesión\nexport const signIn=async(email,password)=>{try{const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error)throw error;return{data,error:null};}catch(error){return{data:null,error:error.message};}};// Iniciar sesión con Google\nexport const signInWithGoogle=async()=>{try{const{data,error}=await supabase.auth.signInWithOAuth({provider:'google',options:{redirectTo:\"\".concat(window.location.origin,\"/\")}});if(error)throw error;return{data,error:null};}catch(error){return{data:null,error:error.message};}};// Cerrar sesión\nexport const signOut=async()=>{try{const{error}=await supabase.auth.signOut();if(error)throw error;return{error:null};}catch(error){return{error:error.message};}};// Obtener usuario actual\nexport const getCurrentUser=async()=>{try{const{data:{user},error}=await supabase.auth.getUser();if(error)throw error;return{user,error:null};}catch(error){return{user:null,error:error.message};}};// Obtener sesión actual\nexport const getSession=async()=>{try{const{data:{session},error}=await supabase.auth.getSession();if(error)throw error;return{session,error:null};}catch(error){return{session:null,error:error.message};}};// Actualizar perfil de usuario\nexport const updateProfile=async(userId,updates)=>{try{const{data,error}=await supabase.from('profiles').update(updates).eq('id',userId).select().single();if(error)throw error;return{data,error:null};}catch(error){return{data:null,error:error.message};}};// Obtener perfil de usuario\nexport const getProfile=async userId=>{try{const{data,error}=await supabase.from('profiles').select('*').eq('id',userId).single();if(error)throw error;return{data,error:null};}catch(error){return{data:null,error:error.message};}};// Recuperar contraseña\nexport const resetPassword=async email=>{try{const{error}=await supabase.auth.resetPasswordForEmail(email,{redirectTo:\"\".concat(window.location.origin,\"/reset-password\")});if(error)throw error;return{error:null};}catch(error){return{error:error.message};}};// Actualizar contraseña\nexport const updatePassword=async newPassword=>{try{const{error}=await supabase.auth.updateUser({password:newPassword});if(error)throw error;return{error:null};}catch(error){return{error:error.message};}};// Suscribirse a cambios de autenticación\nexport const onAuthStateChange=callback=>{return supabase.auth.onAuthStateChange((event,session)=>{callback(event,session);});};","map":{"version":3,"names":["supabase","signUp","email","password","fullName","data","error","auth","options","full_name","user","from","insert","id","message","signIn","signInWithPassword","signInWithGoogle","signInWithOAuth","provider","redirectTo","concat","window","location","origin","signOut","getCurrentUser","getUser","getSession","session","updateProfile","userId","updates","update","eq","select","single","getProfile","resetPassword","resetPasswordForEmail","updatePassword","newPassword","updateUser","onAuthStateChange","callback","event"],"sources":["C:/Users/Usuario/OneDrive/Desktop/proyecto/chinasaqra-demo/src/services/authService.js"],"sourcesContent":["import { supabase } from '../config/supabase';\n\n// Registrar nuevo usuario\nexport const signUp = async (email, password, fullName) => {\n  try {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          full_name: fullName\n        }\n      }\n    });\n\n    if (error) throw error;\n\n    // Crear perfil de usuario\n    if (data.user) {\n      await supabase\n        .from('profiles')\n        .insert([\n          {\n            id: data.user.id,\n            email: data.user.email,\n            full_name: fullName\n          }\n        ]);\n    }\n\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Iniciar sesión\nexport const signIn = async (email, password) => {\n  try {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Iniciar sesión con Google\nexport const signInWithGoogle = async () => {\n  try {\n    const { data, error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        redirectTo: `${window.location.origin}/`\n      }\n    });\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Cerrar sesión\nexport const signOut = async () => {\n  try {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    return { error: null };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Obtener usuario actual\nexport const getCurrentUser = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) throw error;\n    return { user, error: null };\n  } catch (error) {\n    return { user: null, error: error.message };\n  }\n};\n\n// Obtener sesión actual\nexport const getSession = async () => {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession();\n    if (error) throw error;\n    return { session, error: null };\n  } catch (error) {\n    return { session: null, error: error.message };\n  }\n};\n\n// Actualizar perfil de usuario\nexport const updateProfile = async (userId, updates) => {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .update(updates)\n      .eq('id', userId)\n      .select()\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Obtener perfil de usuario\nexport const getProfile = async (userId) => {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Recuperar contraseña\nexport const resetPassword = async (email) => {\n  try {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`\n    });\n\n    if (error) throw error;\n    return { error: null };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Actualizar contraseña\nexport const updatePassword = async (newPassword) => {\n  try {\n    const { error } = await supabase.auth.updateUser({\n      password: newPassword\n    });\n\n    if (error) throw error;\n    return { error: null };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Suscribirse a cambios de autenticación\nexport const onAuthStateChange = (callback) => {\n  return supabase.auth.onAuthStateChange((event, session) => {\n    callback(event, session);\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}