{"ast":null,"code":"import { supabase } from '../config/supabase';\n\n// Registrar nuevo usuario\nexport const signUp = async (email, password, fullName) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          full_name: fullName\n        }\n      }\n    });\n    if (error) throw error;\n\n    // Crear perfil de usuario\n    if (data.user) {\n      await supabase.from('profiles').insert([{\n        id: data.user.id,\n        email: data.user.email,\n        full_name: fullName\n      }]);\n    }\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Iniciar sesión\nexport const signIn = async (email, password) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Iniciar sesión con Google\nexport const signInWithGoogle = async () => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        redirectTo: `${window.location.origin}/`\n      }\n    });\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Cerrar sesión\nexport const signOut = async () => {\n  try {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n    return {\n      error: null\n    };\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};\n\n// Obtener usuario actual\nexport const getCurrentUser = async () => {\n  try {\n    const {\n      data: {\n        user\n      },\n      error\n    } = await supabase.auth.getUser();\n    if (error) throw error;\n    return {\n      user,\n      error: null\n    };\n  } catch (error) {\n    return {\n      user: null,\n      error: error.message\n    };\n  }\n};\n\n// Obtener sesión actual\nexport const getSession = async () => {\n  try {\n    const {\n      data: {\n        session\n      },\n      error\n    } = await supabase.auth.getSession();\n    if (error) throw error;\n    return {\n      session,\n      error: null\n    };\n  } catch (error) {\n    return {\n      session: null,\n      error: error.message\n    };\n  }\n};\n\n// Actualizar perfil de usuario\nexport const updateProfile = async (userId, updates) => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').update(updates).eq('id', userId).select().single();\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Obtener perfil de usuario\nexport const getProfile = async userId => {\n  try {\n    const {\n      data,\n      error\n    } = await supabase.from('profiles').select('*').eq('id', userId).single();\n    if (error) throw error;\n    return {\n      data,\n      error: null\n    };\n  } catch (error) {\n    return {\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Recuperar contraseña\nexport const resetPassword = async email => {\n  try {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`\n    });\n    if (error) throw error;\n    return {\n      error: null\n    };\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};\n\n// Actualizar contraseña\nexport const updatePassword = async newPassword => {\n  try {\n    const {\n      error\n    } = await supabase.auth.updateUser({\n      password: newPassword\n    });\n    if (error) throw error;\n    return {\n      error: null\n    };\n  } catch (error) {\n    return {\n      error: error.message\n    };\n  }\n};\n\n// Suscribirse a cambios de autenticación\nexport const onAuthStateChange = callback => {\n  return supabase.auth.onAuthStateChange((event, session) => {\n    callback(event, session);\n  });\n};","map":{"version":3,"names":["supabase","signUp","email","password","fullName","data","error","auth","options","full_name","user","from","insert","id","message","signIn","signInWithPassword","signInWithGoogle","signInWithOAuth","provider","redirectTo","window","location","origin","signOut","getCurrentUser","getUser","getSession","session","updateProfile","userId","updates","update","eq","select","single","getProfile","resetPassword","resetPasswordForEmail","updatePassword","newPassword","updateUser","onAuthStateChange","callback","event"],"sources":["C:/Users/Usuario/OneDrive/Desktop/proyecto/chinasaqra-demo/src/services/authService.js"],"sourcesContent":["import { supabase } from '../config/supabase';\n\n// Registrar nuevo usuario\nexport const signUp = async (email, password, fullName) => {\n  try {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          full_name: fullName\n        }\n      }\n    });\n\n    if (error) throw error;\n\n    // Crear perfil de usuario\n    if (data.user) {\n      await supabase\n        .from('profiles')\n        .insert([\n          {\n            id: data.user.id,\n            email: data.user.email,\n            full_name: fullName\n          }\n        ]);\n    }\n\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Iniciar sesión\nexport const signIn = async (email, password) => {\n  try {\n    const { data, error } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Iniciar sesión con Google\nexport const signInWithGoogle = async () => {\n  try {\n    const { data, error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        redirectTo: `${window.location.origin}/`\n      }\n    });\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Cerrar sesión\nexport const signOut = async () => {\n  try {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    return { error: null };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Obtener usuario actual\nexport const getCurrentUser = async () => {\n  try {\n    const { data: { user }, error } = await supabase.auth.getUser();\n    if (error) throw error;\n    return { user, error: null };\n  } catch (error) {\n    return { user: null, error: error.message };\n  }\n};\n\n// Obtener sesión actual\nexport const getSession = async () => {\n  try {\n    const { data: { session }, error } = await supabase.auth.getSession();\n    if (error) throw error;\n    return { session, error: null };\n  } catch (error) {\n    return { session: null, error: error.message };\n  }\n};\n\n// Actualizar perfil de usuario\nexport const updateProfile = async (userId, updates) => {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .update(updates)\n      .eq('id', userId)\n      .select()\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Obtener perfil de usuario\nexport const getProfile = async (userId) => {\n  try {\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', userId)\n      .single();\n\n    if (error) throw error;\n    return { data, error: null };\n  } catch (error) {\n    return { data: null, error: error.message };\n  }\n};\n\n// Recuperar contraseña\nexport const resetPassword = async (email) => {\n  try {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: `${window.location.origin}/reset-password`\n    });\n\n    if (error) throw error;\n    return { error: null };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Actualizar contraseña\nexport const updatePassword = async (newPassword) => {\n  try {\n    const { error } = await supabase.auth.updateUser({\n      password: newPassword\n    });\n\n    if (error) throw error;\n    return { error: null };\n  } catch (error) {\n    return { error: error.message };\n  }\n};\n\n// Suscribirse a cambios de autenticación\nexport const onAuthStateChange = (callback) => {\n  return supabase.auth.onAuthStateChange((event, session) => {\n    callback(event, session);\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}